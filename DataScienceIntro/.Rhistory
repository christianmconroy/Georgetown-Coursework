data5$time <- as.Date(data5$time, "%Y-%m-%d")
data5_train <- data5[data5$time < "2017-01-01",]
data5_test <- data5[data5$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data5_test <- data5_test[data5_test$postal_code!="5440",]
data5_test <- data5_test[data5_test$postal_code!="8054",]
trainimp <- unique(data5_train$postal_code)
testimp <- unique(data5_test$postal_code)
data5_test <- dplyr::filter(data5_test, postal_code %in% trainimp)
data5_train <- dplyr::filter(data5_train, postal_code %in% testimp)
# Build the mixed effects model (Can I do this before the RF or do I have to do it after somehow?)
# Hausman Test
# set options for Hausman test
my.formula.impute.lag <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + factor(time)
# Had too take standard deviation out because of all the NAs. What to do? Can impute those too?
my.index <- c('postal_code','time')
# Conduct Hausman Test
my.hausman.test.train.impute.lag <- phtest(x = my.formula.impute.lag , data = data5_train, model = c('within', 'random'),index = my.index)
# print result
print(my.hausman.test.train.impute.lag)
# Low p-value, so best to go with fixed effects.
# Regular LM using zip dummies
my.pdm.train.lag.lm.immpute <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + factor(time), data = data5_train)
summary(my.pdm.train.lag.lm.immpute)
# Predict
#LM
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
View(data5_test)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
data5_test$time <- as.factor(data5_test$time)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
Full_data_long_train <- Full_data_long[Full_data_long$time < "2017-01-01",]
Full_data_long_test <- Full_data_long[Full_data_long$time >= "2017-01-01",]
Full_data_long_test <- Full_data_long_test[Full_data_long_test$postal_code!="05440",]
train <- unique(Full_data_long_train$postal_code)
test<- unique(Full_data_long_test$postal_code)
Full_data_long_test <- dplyr::filter(Full_data_long_test, postal_code %in% train)
Full_data_long_train <- dplyr::filter(Full_data_long_train, postal_code %in% test)
length(unique(Full_data_long_test$postal_code))
length(unique(Full_data_long_train$postal_code))
my.lag.formula <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code +factor(time)
my.hausman.test.train.lag <- phtest(x = my.lag.formula,
data = Full_data_long_train,
model = c('within', 'random'),
index = my.index)
print(my.hausman.test.train.lag)
my.pdm.train.lag.lm <- lm (rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + factor(time), data = Full_data_long_test)
Full_data_long_test$pred.plm.test.lag <- predict(my.pdm.train.lag.lm, Full_data_long_test)
plmmape.lag <- 100*mean(abs(Full_data_long_test$pred.plm.test.lag/Full_data_long_test$rentprice-1), na.rm = T)
print(plmmape.lag)
data5 <- read.csv("imputedfull5.csv")
class(data5)
data5_train <- data5[data5$time < "2017-01-01",]
data5_test <- data5[data5$time >= "2017-01-01",]
data5_train <- data5[data5$time < "2017-01-01",]
data5_test <- data5[data5$time >= "2017-01-01",]
data5$time <- as.Date(data5$time, "%Y-%m-%d")
data5_train <- data5[data5$time < "2017-01-01",]
data5_test <- data5[data5$time >= "2017-01-01",]
data5_test <- data5_test[data5_test$postal_code!="5440",]
data5_test <- data5_test[data5_test$postal_code!="8054",]
trainimp <- unique(data5_train$postal_code)
testimp <- unique(data5_test$postal_code)
data5_test <- dplyr::filter(data5_test, postal_code %in% trainimp)
data5_train <- dplyr::filter(data5_train, postal_code %in% testimp)
my.formula.impute.lag <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + factor(time)
my.hausman.test.train.impute.lag <- phtest(x = my.formula.impute.lag , data = data5_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag)
summary(my.pdm.train.lag.lm.immpute)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
my.pdm.train.lag.lm.immpute <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + factor(postal_code) + factor(time), data = data5_train)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
data5 <- pdata.frame(data5, index = c("postal_code", "time"))
# Create train and test set using the last 12 months (1 year) for the test set
data5$time <- as.Date(data5$time, "%Y-%m-%d")
data5_train <- data5[data5$time < "2017-01-01",]
data5_test <- data5[data5$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data5_test <- data5_test[data5_test$postal_code!="5440",]
data5_test <- data5_test[data5_test$postal_code!="8054",]
trainimp <- unique(data5_train$postal_code)
testimp <- unique(data5_test$postal_code)
data5_test <- dplyr::filter(data5_test, postal_code %in% trainimp)
data5_train <- dplyr::filter(data5_train, postal_code %in% testimp)
# Build the mixed effects model
# Hausman Test
# set options for Hausman test
my.formula.impute.lag <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + factor(time)
# Had too take standard deviation out because of all the NAs. What to do? Can impute those too?
my.index <- c('postal_code','time')
summary(my.pdm.train.lag.lm.immpute)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
my.pdm.train.lag.lm.immpute <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data5_train)
summary(my.pdm.train.lag.lm.immpute)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
coef(my.pdm.train.lag.lm.immpute)
my.pdm.train.lag.lm.immpute <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + factor(time), data = data5_train)
coef(my.pdm.train.lag.lm.immpute)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
coef(my.pdm.train.lag.lm)
my.pdm.train.lag.lm <- lm (rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + factor(time), data = Full_data_long_train)
Full_data_long_test$pred.plm.test.lag <- predict(my.pdm.train.lag.lm, Full_data_long_test)
lag123 <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews
my.pdm.123 <- plm(data = Full_data_long_train,
formula = lag123,
model = 'within',
index = my.index)
Full_data_long_test$pred.123 <- predict(my.pdm.123, Full_data_long_test, type='response')
coef(my.pdm.train.lag.lm)
Full_data_long_test$pred.plm.test.lag <- predict(my.pdm.train.lag.lm, Full_data_long_test)
my.formula.impute.lag.Simple <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + postal_code
my.index <- c('postal_code','time')
my.hausman.test.train.impute.lag.Simple <- phtest(x = my.formula.impute.lag.Simple , data = data5_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag.Simple)
pdata <- pdata.frame(Full_data_long_train,index=c("postal_code","time"), drop.index=TRUE, row.names=TRUE)
fixed123 <- plm(formula = lag123, data=pdata, model = "within")
Full_data_long_test$pred.123 <- predict(fixed123, pdata, type='response')
Full_data_long_test$pred.123 <- predict(fixed123, pdata)
Full_data_long_test$pred.123 <- predict.plm(fixed123, pdata)
Full_data_long_test$pred.123 <- predict(fixed123, pdata)
Full_data_long_test$pred.123 <- pmodel.response(fixed123, pdata)
Full_data_long_test$pred.123 <- predict(fixed123, pdata)
fixed123 <- plm(formula = lag123, data=pdata, model = "within", effect = "twoways")
Full_data_long_test$pred.123 <- predict(fixed123, pdata)
vif(fixed123)
vif(my.pdm.123)
print(my.hausman.test.train.lag)
mylagtime <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews
mylagnotime <- <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews  + factor(time)
mylagnotime <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews  + factor(time)
my.pdm.notime <- plm(data = Full_data_long_train, formula = mylagnotime, model = 'within',
index = my.index)
my.pdm.time <- plm(data = Full_data_long_train, formula = mylagtime, model = 'within',
index = my.index)
pFtest(my.pdm.notime, my.pdn.time)
pFtest(my.pdm.notime, my.pdm.time)
mylagtime <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + factor(time)
my.pdm.time <- plm(data = Full_data_long_train, formula = mylagtime, model = 'within',
index = my.index)
Full_data_long_test$pred.plm.test.lag <- predict(my.pdm.time, Full_data_long_test)
my.lag.formula <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time
my.hausman.test.train.lag <- phtest(x = my.lag.formula,
data = Full_data_long_train,
model = c('within', 'random'),
index = my.index)
my.hausman.test.train.lag <- phtest(x = my.lag.formula,
data = Full_data_long_train,
model = c('within', 'random'),
index = my.index)
print(my.hausman.test.train.lag)
my.pdm.train.lag.lm <- lm (rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time, data = Full_data_long_train)
Full_data_long_test$pred.plm.test.lag <- predict(my.pdm.train.lag.lm, Full_data_long_test)
# MAPE
plmmape.lag <- 100*mean(abs(Full_data_long_test$pred.plm.test.lag/Full_data_long_test$rentprice-1), na.rm = T)
print(plmmape.lag)
# Create train and test set using the last 12 months (1 year) for the test set
Full_data_long_train <- Full_data_long[Full_data_long$time < "2017-01-01",]
Full_data_long_test <- Full_data_long[Full_data_long$time >= "2017-01-01",]
my.formula <- rentprice ~ starsav + is_openave + funnyav + coolav + usefulav
my.index <- c('postal_code','time')
# Conduct Hausman Test
my.hausman.test.train <- phtest(x = my.formula,
data = Full_data_long_train,
model = c('within', 'random'),
index = my.index)
my.pdm.train <- plm(data = Full_data_long_train,
formula = my.formula,
model = 'random',
index = my.index)
Full_data_long_test$pred.plm.test <- predict(my.pdm.train, Full_data_long_test, type='response')
plmmape <- 100*mean(abs(Full_data_long_test$pred.plm.test/Full_data_long_test$rentprice-1), na.rm = T)
print(plmmape)
ggplot(Full_data_long_test, aes(x=rentprice, y=pred.plm.test)) +geom_point() + labs(title="Predicted vs. Actual Real Estate Prices") + xlab("Actual") + ylab("Predicted")
# Try to make sure both sets have same postal codes
# 05440 was staying in as factor in test for some reason. Take out here.
Full_data_long_train <- Full_data_long[Full_data_long$time < "2017-01-01",]
Full_data_long_test <- Full_data_long[Full_data_long$time >= "2017-01-01",]
Full_data_long_test <- Full_data_long_test[Full_data_long_test$postal_code!="05440",]
train <- unique(Full_data_long_train$postal_code)
test<- unique(Full_data_long_test$postal_code)
Full_data_long_test <- dplyr::filter(Full_data_long_test, postal_code %in% train)
Full_data_long_train <- dplyr::filter(Full_data_long_train, postal_code %in% test)
length(unique(Full_data_long_test$postal_code))
length(unique(Full_data_long_train$postal_code))
# Specification
my.lag.formula <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time
# Conduct Hausman Test
my.hausman.test.train.lag <- phtest(x = my.lag.formula,
data = Full_data_long_train,
model = c('within', 'random'),
index = my.index)
# print result
print(my.hausman.test.train.lag)
# Low p-value so do fixed effects)
# Regular LM using zip dummies
my.pdm.train.lag.lm <- lm (rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time, data = Full_data_long_train)
summary(my.pdm.train.lag.lm)
Full_data_long_test$pred.plm.test.lag <- predict(my.pdm.train.lag.lm, Full_data_long_test)
plmmape.lag <- 100*mean(abs(Full_data_long_test$pred.plm.test.lag/Full_data_long_test$rentprice-1), na.rm = T)
print(plmmape.lag)
ggplot(Full_data_long_test, aes(x=rentprice, y=pred.plm.test.lag)) +geom_point() + labs(title="Predicted vs. Actual Real Estate Prices") + xlab("Actual") + ylab("Predicted")
# Create train and test set using the last 12 months (1 year) for the test set
data5$time <- as.Date(data5$time, "%Y-%m-%d")
data5_train <- data5[data5$time < "2017-01-01",]
data5_test <- data5[data5$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data5_test <- data5_test[data5_test$postal_code!="5440",]
data5_test <- data5_test[data5_test$postal_code!="8054",]
trainimp <- unique(data5_train$postal_code)
testimp <- unique(data5_test$postal_code)
data5_test <- dplyr::filter(data5_test, postal_code %in% trainimp)
data5_train <- dplyr::filter(data5_train, postal_code %in% testimp)
my.formula.impute.lag <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time
my.hausman.test.train.impute.lag <- phtest(x = my.formula.impute.lag , data = data5_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag)
my.pdm.train.lag.lm.immpute <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data5_train)
data5_test$my.pdm.train.lag.lm.immpute <- predict(my.pdm.train.lag.lm.immpute, data5_test)
plmmape_impute_lag <- 100*mean(abs(data5_test$my.pdm.train.lag.lm.immpute/data5_test$rentprice-1), na.rm = T)
print(plmmape_impute_lag)
ggplot(data5_test, aes(x=rentprice, y=my.pdm.train.lag.lm.immpute)) +geom_point() + labs(title="Predicted vs. Actual Real Estate Prices") + xlab("Actual") + ylab("Predicted")
my.formula.impute.lag.Simple <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + postal_code
my.index <- c('postal_code','time')
my.hausman.test.train.impute.lag.Simple <- phtest(x = my.formula.impute.lag.Simple , data = data5_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag.Simple)
my.formula.impute.lag.Simple <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + postal_code + time
my.hausman.test.train.impute.lag.Simple <- phtest(x = my.formula.impute.lag.Simple , data = data5_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag.Simple)
my.pdm.train.impute.lag.Simple <- plm(data = data5_train,
formula = my.formula.impute.lag.Simple,
model = 'within',
index = my.index)
data5_test$pred.plm.test.impute.lag.Simple <- predict(my.pdm.train.impute.lag.Simple, data5_test, type='response')
my.pdm.train.impute.lag.Simple  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + postal_code + time, data = data5_train)
summary(my.pdm.train.impute.lag.Simple)
data5_test$pred.plm.test.impute.lag.Simple <- predict(my.pdm.train.impute.lag.Simple, data5_test)
plmmape_impute_lag.Simple <- 100*mean(abs(data5_test$pred.plm.test.impute.lag.Simple/data5_test$rentprice-1), na.rm = T)
print(plmmape_impute_lag.Simple)
yelp_review_long_food <- read.csv("yelplongPC_food.csv", header = T, na.strings=c("NA"))
sapply(yelp_review_long_food, function(x) sum(is.na(x)))
# No missing postal codes
length(unique(yelp_review_long_food$postal_code))
# 3274 unique postal codes
yelp_review_long_food$YearMonth <- as.yearmon(yelp_review_long_food$YearMonth)
############### Merge Checkin with Yelp
# Nonexpanded
yelp_review_long_food <- left_join(yelp_review_long_food, checkinfull, by=c('postal_code'), match='all')
############### Merge Zillow with Yelp
# Non-Expanded
Full_data_long_food <- inner_join(yelp_review_long_food, zillow_long, by=c('postal_code', 'YearMonth'), match='all')
length(unique(Full_data_long_food$postal_code))
sapply(Full_data_long_food, function(x) sum(is.na(x)))
########### Now we can start the actual analysis!!!!!###############
##### Normal Dataset
# Create train and test set using the last 12 months (1 year) for the test set
Full_data_long_food_train <- Full_data_long_food[Full_data_long_food$time < "2017-01-01",]
Full_data_long_food_test <- Full_data_long_food[Full_data_long_food$time >= "2017-01-01",]
# Build the mixed effects model (Can I do this before the RF or do I have to do it after somehow?)
# Hausman Test
# set options for Hausman test
names(Full_data_long_food)
my.formula <- rentprice ~ starsav + is_openave + funnyav + coolav + usefulav
# Had to take + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_totalout because of the NAs.
# Had too take standard deviation out because of all the NAs. What to do? Can impute those too?
my.index <- c('postal_code','time')
# Conduct Hausman Test
my.hausman.test.train.food <- phtest(x = my.formula,
data = Full_data_long_food_train,
model = c('within', 'random'),
index = my.index)
# print result
print(my.hausman.test.train.food)
my.pdm.train.food <- plm(data = Full_data_long_food_train,
formula = my.formula,
model = 'random',
index = my.index)
summary(my.pdm.train.food)
Full_data_long_food_test$pred.plm.test <- predict(my.pdm.train.food, Full_data_long_food_test, type='response')
plmmape.food <- 100*mean(abs(Full_data_long_food_test$pred.plm.test/Full_data_long_food_test$rentprice-1), na.rm = T)
print(plmmape.food)
ggplot(Full_data_long_food_test, aes(x=rentprice, y=pred.plm.test)) +geom_point() + labs(title="Predicted vs. Actual Real Estate Prices") + xlab("Actual") + ylab("Predicted")
my.lag.formula <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews
my.hausman.test.food.train.lag <- phtest(x = my.lag.formula,
data = Full_data_long_food_train,
model = c('within', 'random'),
index = my.index)
print(my.hausman.test.food.train.lag)
my.lag.formula <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time
my.hausman.test.food.train.lag <- phtest(x = my.lag.formula,
data = Full_data_long_food_train,
model = c('within', 'random'),
index = my.index)
print(my.hausman.test.food.train.lag)
my.pdm.train.impute.lag.Simple  <- lm (rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time, data = Full_data_long_food_train)
summary(my.pdm.train.impute.lag.Simple)
Full_data_long_food_test$pred.plm.test.lag <- predict(my.pdm.train.food.lag, Full_data_long_food_test)
Full_data_long_food_test$pred.plm.test.lag <- predict(my.pdm.train.impute.lag.Simple, Full_data_long_food_test)
Full_data_long_food_test <- Full_data_long_food_test[Full_data_long_food_test$postal_code!="28803",]
Full_data_long_food_test <- Full_data_long_food_test[Full_data_long_food_test$postal_code!="85266",]
trainimpfood <- unique(Full_data_long_food_train$postal_code)
testimpfood <- unique(data5_test$postal_code)
Full_data_long_food_test <- dplyr::filter(Full_data_long_food_test, postal_code %in% trainimpfood)
Full_data_long_food_train <- dplyr::filter(Full_data_long_food_train, postal_code %in% testimpfood)
my.lag.formula <- rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time
my.hausman.test.food.train.lag <- phtest(x = my.lag.formula,
data = Full_data_long_food_train,
model = c('within', 'random'),
index = my.index)
print(my.hausman.test.food.train.lag)
my.pdm.train.impute.lag.Simple  <- lm (rentprice ~ lag(rentprice, 1) + starsav + is_openave + funnyav + coolav + usefulav + Number_of_reviews + postal_code + time, data = Full_data_long_food_train)
Full_data_long_food_test$pred.plm.test.lag <- predict(my.pdm.train.impute.lag.Simple, Full_data_long_food_test)
plmmape.lag.food <- 100*mean(abs(Full_data_long_food_test$pred.plm.test.lag/Full_data_long_food_test$rentprice-1), na.rm = T)
print(plmmape.lag.food)
ggplot(Full_data_long_food_test, aes(x=rentprice, y=pred.plm.test.lag)) +geom_point() + labs(title="Predicted vs. Actual Real Estate Prices") + xlab("Actual") + ylab("Predicted")
my.hausman.test.train.impute.lag.food <- phtest(x = my.formula.impute.lag.food, data = data10_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag.food)
trainimpfin <- unique(data5_train$postal_code)
testimpfin <- unique(data5_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.formula.impute.lag.food <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time
my.hausman.test.train.impute.lag.food <- phtest(x = my.formula.impute.lag.food, data = data10_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag.food)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
summary(my.pdm.train.impute.lag.Simple)
my.pdm.train.impute.lag.food)
summary(my.pdm.train.impute.lag.food)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
# Create train and test set using the last 12 months (1 year) for the test set
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data10_test <- data10_test[data10_test$postal_code!="12919",]
data10_test <- data10_test[data10_test$postal_code!="15003",]
trainimpfin <- unique(data5_train$postal_code)
testimpfin <- unique(data5_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
# Build the mixed effects model
# Hausman Test
# set options for Hausman test
my.formula.impute.lag.food <- rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time
my.index <- c('postal_code','time')
# Conduct Hausman Test
my.hausman.test.train.impute.lag.food <- phtest(x = my.formula.impute.lag.food, data = data10_train, model = c('within', 'random'),index = my.index)
# print result
print(my.hausman.test.train.impute.lag.food)
# Low p-value, so we'll go with fixed.
# Built fixed effects model on train
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
summary(my.pdm.train.impute.lag.food)
# Predict
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
plmmape_impute_lag_food <- 100*mean(abs(data10_test$pred.plm.test.impute.lag/data10_test$rentprice-1), na.rm = T)
print(plmmape_impute_lag_food)
# Imputation gives us 3.6576%, which is better than the full set.
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
# 05440 was staying in as factor in test for some reason. Take out here.
data10_test <- data10_test[data10_test$postal_code!="12919",]
data10_test <- data10_test[data10_test$postal_code!="15003",]
data10_test <- data10_test[data10_test$postal_code!="15017",]
trainimpfin <- unique(data5_train$postal_code)
testimpfin <- unique(data5_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.hausman.test.train.impute.lag.food <- phtest(x = my.formula.impute.lag.food, data = data10_train, model = c('within', 'random'),index = my.index)
print(my.hausman.test.train.impute.lag.food)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
# data10_test <- data10_test[data10_test$postal_code!="12919",]
# data10_test <- data10_test[data10_test$postal_code!="15003",]
# data10_test <- data10_test[data10_test$postal_code!="15017",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data10_test <- data10_test[data10_test$postal_code!="12919",]
data10_test <- data10_test[data10_test$postal_code!="15003",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data10_test <- data10_test[data10_test$postal_code!="12919",]
data10_test <- data10_test[data10_test$postal_code!="15003",]
data10_test <- data10_test[data10_test$postal_code!="15017",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
data10 <- read.csv("imputedfull_foodf5.csv")
data10 <- pdata.frame(data10, index = c("postal_code", "time"))
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
data10 <- read.csv("imputedfull_foodf5.csv")
data10 <- pdata.frame(data10, index = c("postal_code", "time"))
data10_test <- data10_test[data10_test$postal_code!="12919",]
data10_test <- data10_test[data10_test$postal_code!="15003",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test, type='response')
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test)
data10 <- read.csv("imputedfull_foodf5.csv")
data10 <- pdata.frame(data10, index = c("postal_code", "time"))
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data10_test <- data10_test[data10_test$postal_code!="12919",]
data10_test <- data10_test[data10_test$postal_code!="15003",]
data10_test <- data10_test[data10_test$postal_code!="15017",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test)
data10 <- read.csv("imputedfull_foodf5.csv")
data10 <- pdata.frame(data10, index = c("postal_code", "time"))
# Create train and test set using the last 12 months (1 year) for the test set
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
# 05440 was staying in as factor in test for some reason. Take out here.
data10_test <- data10_test[data10_test$postal_code!="12919",]
data10_test <- data10_test[data10_test$postal_code!="15003",]
data10_test <- data10_test[data10_test$postal_code!="15017",]
data10_test <- data10_test[data10_test$postal_code!="15024",]
data10_test <- data10_test[data10_test$postal_code!="15034",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test)
data10_test <- data10_test[data10_test$postal_code!="15044",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test)
data10 <- read.csv("imputedfull_foodf5.csv")
data10 <- pdata.frame(data10, index = c("postal_code", "time"))
# Create train and test set using the last 12 months (1 year) for the test set
data10$time <- as.Date(data10$time, "%Y-%m-%d")
data10_train <- data10[data10$time < "2017-01-01",]
data10_test <- data10[data10$time >= "2017-01-01",]
trainimpfin <- unique(data10_train$postal_code)
testimpfin <- unique(data10_test$postal_code)
data10_test <- dplyr::filter(data10_test, postal_code %in% trainimpfin)
data10_train <- dplyr::filter(data10_train, postal_code %in% testimpfin)
length(unique(data10_test$postal_code))
length(unique(data10_train$postal_code))
my.pdm.train.impute.lag.food  <- lm (rentprice ~ lag(rentprice, 12) + starsav + starssd + is_openave + funnyav + coolav + usefulav + Number_of_reviews + Number_of_businesses + Friday_ave + Monday_ave + Saturday_ave + Sunday_ave + Thursday_ave + Tuesday_ave + Wednesday_ave + Friday_total + Monday_total + Saturday_total + Sunday_total + Thursday_total + Tuesday_total + Wednesday_total + postal_code + time, data = data10_test)
summary(my.pdm.train.impute.lag.food)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test)
data10_test$pred.plm.test.impute.lag <- predict(my.pdm.train.impute.lag.food, data10_test)
library(knitr)
library(zoo)
library(readr)
library(tidyr)
library(dplyr)
library(Amelia)
library(lattice)
library(stringr)
library(jsonlite)
library(mitools)
library(plm)
library(ggplot2)
library(directlabels)
opts_knit$set(root.dir ="/Users/chris/Documents/GeorgetownMPPMSFS/McCourtMPP/Semester4MPP/DataScienceIntro")
# Stream in Check-In Data
yelp_checkin <- as.data.frame(jsonlite::stream_in(file("dataset/checkin.json")), flatten = TRUE)
# Flatten Check-In Data
renquote <- function(l) if (is.list(l)) lapply(l, renquote) else enquote(l)
yelp_checkin_flat <- as.data.frame(lapply(unlist(renquote(yelp_checkin)), eval))
# Convert from wide to long
yelp_checkin_flat_long <- reshape(yelp_checkin_flat, varying = list(names(yelp_checkin_flat[1:168])), times = names(yelp_checkin_flat[1:168]), idvar = 'business_id', v.names = 'checkin' , direction = 'long')
# Eliminate punctuation and digits
yelp_checkin_flat_long$time <- str_replace(yelp_checkin_flat_long$time, "time.", "")
yelp_checkin_flat_long$time <- gsub('[[:digit:]]+', '', yelp_checkin_flat_long$time)
# Isolate name of weekday
yelp_checkin_flat_long$time = substr(yelp_checkin_flat_long$time,1,nchar(yelp_checkin_flat_long$time)-2)
